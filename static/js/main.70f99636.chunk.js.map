{"version":3,"sources":["containers/Auth/api.ts","containers/Auth/authSlice.ts","utils/formUtils.ts","components/Button/styled.ts","components/Button/index.tsx","containers/Auth/SignupForm/styled.ts","containers/Auth/SignupForm/index.tsx","containers/Auth/LoginModal/index.tsx","containers/Dashboard/styled.ts","responsive.ts","containers/Dashboard/index.tsx","containers/Quiz/utils.ts","containers/Quiz/api.ts","containers/Quiz/images/styled.ts","containers/Quiz/images/cross.tsx","containers/Quiz/images/tick.tsx","containers/Quiz/Result/styled.ts","containers/Quiz/Result/index.tsx","containers/Quiz/styled.ts","containers/Quiz/index.tsx","containers/HomePage/styled.ts","containers/HomePage/index.tsx","containers/Navbar/index.tsx","containers/QuizPage/index.tsx","containers/Routes/index.tsx","App.tsx","app/store.ts","reportWebVitals.ts","index.tsx"],"names":["signUpAPI","email","password","isSignUp","a","url","axios","post","response","localStorage","setItem","data","auth_token","user","alert","bootstrapAPI","get","headers","Authorization","getItem","defaults","toString","initialState","undefined","isLoginModalShown","authSlice","createSlice","name","reducers","setUser","state","action","payload","removeUser","showLoginModal","hideLoginModal","actions","selectUser","auth","selectShouldShowLoginModal","logOut","dispatch","clear","error","logOutAPI","transformServerErrors","errors","setError","Object","keys","forEach","key","type","message","join","SpinnerCont","styled","div","StyledBootstrapButton","Button","isLoading","children","disabled","remainingProps","Spinner","size","animation","style","margin","GetStartedButton","SignUpFormCont","props","isVertical","getFormColStyles","isHidden","PasswordCol","Col","FormCol","SignUpForm","useState","hidePasswordField","sethidePasswordField","history","useHistory","useDispatch","useForm","register","handleSubmit","isSubmitting","formState","onSubmit","push","colSize","method","Form","Group","Boolean","non_field_errors","Row","textAlign","className","ref","md","Control","placeholder","onChange","e","required","pattern","value","isInvalid","minLength","variant","block","LoginModal","useLogin","isLogin","setIsLogin","shouldShow","useSelector","buttonTextFirst","buttonTextSecond","Modal","show","onHide","Header","closeButton","closeLabel","Body","minHeight","onClick","paddingLeft","color","DashboardCardColumns","CardColumns","locked","DashboardCard","Card","TopicTitle","h3","topics","subtopics","Dashboard","Container","map","topic","subtopic","to","Math","round","random","randomizeQuestions","questions","question","answers","sort","sleep","t","Promise","s","setTimeout","pageQuestions","id","answer","img","isCorrect","getQuestions","isPage","StyledSVG","svg","isReview","Cross","version","xmlns","viewBox","fill","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","strokeLinecap","x1","y1","x2","y2","Tick","points","ResultsCont","ResultItem","ReviewButton","Result","resetQuiz","totalCorrect","onReview","SignupForm","AnswerCol","OptionCont","forceHighlight","OptionImage","isTransparent","QuestionImage","QuestionText","StyledProgressBar","ProgressBar","QuestionRow","NextButton","Quiz","showSignupForm","setQuestions","questionIndex","setQuestionIndex","answeredQuestions","setAnsweredQuestions","ticked","setTicked","crossed","setCrossed","setIsReview","answeredQuestion","find","questionId","useEffect","then","result","content","nextQuestion","answerId","correctAnswer","answered","correctAnswerId","filter","length","progress","Fragment","now","label","src","isTicked","isCrossed","lg","HeadingContainer","h1","SubHeading","FormContainer","QuizContainer","HomePage","sm","NavbarComponent","Navbar","bg","Brand","as","Link","Nav","NavDropdown","title","Item","Text","paddingRight","width","QuizPage","match","Routes","basename","exact","path","component","App","store","configureStore","reducer","authReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","baseURL","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70f99636.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { User } from \"./authSlice\";\n\ntype signUpResponse = {\n    data: {\n        user: User;\n        auth_token: string;\n    };\n};\n\nexport const signUpAPI = async (\n    email: string,\n    password: string,\n    isSignUp: boolean\n) => {\n    const url = isSignUp ? \"/auth/users/\" : \"/auth/token/login/\";\n    try {\n        const response: signUpResponse = await axios.post(url, {\n            email,\n            password,\n        });\n        localStorage.setItem(\"token\", response.data.auth_token);\n        return response.data.user;\n    } catch (error) {\n        if (error.response?.data) throw error;\n        alert(\n            \"An error occured when processing your request. Please check your connection and try again.\"\n        );\n        return;\n    }\n};\n\nexport const bootstrapAPI = async () => {\n    try {\n        const response = await axios.get(\"/auth/users/me/\", {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        });\n        axios.defaults.headers = {\n            Authorization: {\n                toString() {\n                    return `Token ${response.data.auth_token}`;\n                },\n            },\n        };\n        return response.data.user;\n    } catch (error) {\n        return;\n    }\n};\n\nexport const logOutAPI = () => {\n    try {\n        axios.post(\"/auth/token/logout/\");\n        localStorage.clear();\n    } catch (error) {\n        alert(\n            \"An error occured when processing your request. Please check your connection and try again.\"\n        );\n        return;\n    }\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppThunk, RootState } from \"app/store\";\nimport { bootstrapAPI, logOutAPI } from \"./api\";\n\nexport interface User {\n    username: string;\n    email: string;\n    id?: number;\n}\n\ninterface AuthState {\n    user?: User;\n    isLoginModalShown: boolean;\n}\n\nconst initialState: AuthState = {\n    user: undefined,\n    isLoginModalShown: false,\n};\n\nexport const authSlice = createSlice({\n    name: \"auth\",\n    initialState,\n    reducers: {\n        setUser: (state, action: PayloadAction<User>) => {\n            state.user = action.payload;\n        },\n        removeUser: (state) => {\n            state.user = undefined;\n        },\n        showLoginModal: (state) => {\n            state.isLoginModalShown = true;\n        },\n        hideLoginModal: (state) => {\n            state.isLoginModalShown = false;\n        },\n    },\n});\n\nexport const {\n    setUser,\n    removeUser,\n    showLoginModal,\n    hideLoginModal,\n} = authSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.auth.value)`\nexport const selectUser = (state: RootState) => state.auth.user;\nexport const selectShouldShowLoginModal = (state: RootState) =>\n    state.auth.isLoginModalShown && !state.auth.user;\n\nexport const getBootstrapData = (): AppThunk => async (dispatch) => {\n    const user = await bootstrapAPI();\n    dispatch(setUser(user));\n};\n\nexport const logOut = (): AppThunk => (dispatch) => {\n    logOutAPI();\n    dispatch(removeUser());\n};\nexport default authSlice.reducer;\n","export const transformServerErrors = <T>(\n    errors: { [P in keyof T]?: string[] },\n    setError: (\n        fieldName: string,\n        error: { type: string; message: string }\n    ) => void\n) =>\n    Object.keys(errors).forEach((key) => {\n        setError(key, {\n            type: \"server\",\n            message: errors[key as keyof T]!.join(\". \"),\n        });\n    });\n","import Button from \"react-bootstrap/Button\";\nimport styled from \"styled-components\";\n\nexport const SpinnerCont = styled.div`\n    padding: 0 8px 0 5px;\n`;\n\nexport const StyledBootstrapButton = styled(Button)`\n    display: flex;\n`;\n","import React from \"react\";\nimport { ButtonProps } from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { SpinnerCont, StyledBootstrapButton } from \"./styled\";\n\nconst Button = ({\n    isLoading,\n    children,\n    disabled,\n    ...remainingProps\n}: {\n    isLoading?: boolean;\n    children: any;\n    disabled?: boolean;\n} & ButtonProps) => (\n    <StyledBootstrapButton {...remainingProps} disabled={isLoading || disabled}>\n        {isLoading && (\n            <SpinnerCont>\n                <Spinner size=\"sm\" animation=\"border\" />\n            </SpinnerCont>\n        )}\n        <span style={{ margin: \"0 auto\" }}>{children}</span>\n    </StyledBootstrapButton>\n);\n\nexport default Button;\n","import Button from \"components/Button\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport styled from \"styled-components\";\n\nexport const GetStartedButton = styled(Button)`\t\n    min-width: 300px\t\n    text-align: center;\t\n`;\n\nexport const SignUpFormCont = styled.div`\n    text-align: left;\n    ${(props: { isVertical: boolean }) => props.isVertical && \"width: 100%;\"}\n`;\n\nconst getPasswordColStyles = ({\n    isVertical,\n    isHidden,\n}: {\n    isHidden: boolean;\n    isVertical: boolean;\n}) => `\t\n    max-width: ${isHidden ? \"0\" : \"100%\"};\t\n    padding: ${isHidden ? \"0\" : \"0 15px 0 15px\"};\t\n    input {\t\n        display: ${isHidden ? \"none\" : \"inline\"};\t\n    }\t\n`;\n\nconst getFormColStyles = ({\n    isVertical,\n    isHidden = false,\n}: {\n    isVertical: boolean;\n    isHidden?: boolean;\n}) => `\t\n    margin-bottom: 20px;\n`;\n\nexport const PasswordCol = styled(Col)`\n    transition: all 1.5s ease;\n    ${getPasswordColStyles}\n    ${getFormColStyles}\n`;\n\nexport const FormCol = styled(Col)`\n    text-align: center;\n    ${getFormColStyles}\n`;\n","import { setUser } from \"containers/Auth/authSlice\";\nimport { useState } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { transformServerErrors } from \"utils/formUtils\";\nimport { signUpAPI } from \"../api\";\nimport {\n    FormCol,\n    GetStartedButton,\n    PasswordCol,\n    SignUpFormCont,\n} from \"./styled\";\n\ntype Inputs = {\n    email: string;\n    password: string;\n};\n\nconst SignUpForm = ({\n    isSignUp,\n    isVertical,\n}: {\n    isSignUp: boolean;\n    isVertical: boolean;\n}) => {\n    const [hidePasswordField, sethidePasswordField] = useState(!isVertical);\n    const onEmailPress = (e: React.ChangeEvent<HTMLInputElement>) => {\n        hidePasswordField && sethidePasswordField(false);\n    };\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const {\n        register,\n        handleSubmit,\n        errors,\n        setError,\n        formState: { isSubmitting },\n    } = useForm();\n\n    const onSubmit = async (data: Inputs) => {\n        const { email, password } = data;\n        try {\n            const user = await signUpAPI(email, password, isSignUp);\n            if (!user) return;\n            dispatch(setUser(user));\n            history.push(\"/dashboard\");\n        } catch (error) {\n            transformServerErrors(error.response.data, setError);\n        }\n    };\n    const colSize = isVertical ? 12 : 3;\n    return (\n        <SignUpFormCont isVertical={isVertical}>\n            <form method=\"get\" onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group>\n                    {Boolean(errors.non_field_errors) && (\n                        <Row style={{ textAlign: \"center\" }}>\n                            <Col>\n                                <div className=\"text-danger\">\n                                    {errors.non_field_errors.message}\n                                </div>\n                            </Col>\n                        </Row>\n                    )}\n                    <input\n                        name={\"non_field_errors\"}\n                        type={\"hidden\"}\n                        ref={register}\n                    />\n\n                    <Row>\n                        {!isVertical && <Col md={hidePasswordField ? 3 : 2} />}\n                        <FormCol md={colSize}>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Email\"\n                                name=\"email\"\n                                size=\"lg\"\n                                onChange={onEmailPress}\n                                ref={register({\n                                    required: true,\n                                    pattern: {\n                                        value: /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\n                                        message:\n                                            \"Please enter a valid email address.\",\n                                    },\n                                })}\n                                isInvalid={errors.email}\n                            />\n                            {errors.email && (\n                                <div className=\"text-danger\">\n                                    {errors.email.message}\n                                </div>\n                            )}\n                        </FormCol>\n\n                        <PasswordCol\n                            md={colSize}\n                            isHidden={hidePasswordField}\n                            isVertical={isVertical}\n                        >\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                size=\"lg\"\n                                name=\"password\"\n                                ref={register({\n                                    required: true,\n                                    minLength: {\n                                        value: 8,\n                                        message:\n                                            \"Your password must be at least 8 characters\",\n                                    },\n                                })}\n                                isInvalid={errors.password}\n                            />\n                            {!hidePasswordField && errors.password && (\n                                <div className=\"text-danger\">\n                                    {errors.password.message}\n                                </div>\n                            )}\n                        </PasswordCol>\n                        <FormCol md={colSize}>\n                            <GetStartedButton\n                                variant=\"primary\"\n                                size=\"lg\"\n                                type=\"submit\"\n                                isLoading={isSubmitting}\n                                block={isVertical ? true : false}\n                            >\n                                {isSignUp ? \"Signup with Email!\" : \"Login\"}\n                            </GetStartedButton>\n                        </FormCol>\n                    </Row>\n                </Form.Group>\n            </form>\n        </SignUpFormCont>\n    );\n};\n\nexport default SignUpForm;\n","import {\n    hideLoginModal,\n    selectShouldShowLoginModal,\n} from \"containers/Auth/authSlice\";\nimport { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SignUpForm from \"../SignupForm\";\n\nconst LoginModal = ({ useLogin = true }: { useLogin?: boolean }) => {\n    const [isLogin, setIsLogin] = useState(useLogin);\n    const dispatch = useDispatch();\n\n    const handleClose = () => {\n        dispatch(hideLoginModal());\n    };\n    const shouldShow = useSelector(selectShouldShowLoginModal);\n\n    const buttonTextFirst = isLogin\n        ? \"Don't have an account?\"\n        : \"Already have account?\";\n    const buttonTextSecond = isLogin ? \"Sign up instead\" : \"Login Instead\";\n    return (\n        <Modal show={shouldShow} onHide={handleClose}>\n            <Modal.Header closeButton closeLabel=\"Close\" />\n            <Modal.Body style={{ minHeight: \"300px\" }} key={isLogin.toString()}>\n                <SignUpForm isSignUp={!isLogin} isVertical={true} />\n                <Button\n                    variant=\"text\"\n                    block={true}\n                    onClick={() => setIsLogin(!isLogin)}\n                >\n                    {buttonTextFirst}\n\n                    <span style={{ paddingLeft: \"5px\", color: \"#004499\" }}>\n                        {buttonTextSecond}\n                    </span>\n                </Button>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nexport default LoginModal;\n","import Card from \"react-bootstrap/Card\";\nimport CardColumns from \"react-bootstrap/CardColumns\";\nimport { md, sm, xs } from \"responsive\";\nimport styled from \"styled-components\";\n\nconst getDashboardCardColumnsStyles = ({ locked }: { locked: boolean }) => `\n    opacity: ${locked ? 0.5 : 1};\n`;\n\nexport const DashboardCardColumns = styled(CardColumns)`\n    ${getDashboardCardColumnsStyles}\n    @media (max-width: ${xs}px) {\n        column-count: 1;\n    }\n    @media (min-width: ${sm}px) {\n        column-count: 2;\n    }\n    @media (min-width: ${md}px) {\n        column-count: 4;\n    }\n    padding-bottom: 50px;\n`;\n\nexport const DashboardCard = styled(Card)`\n    height: 200px;\n    width: 200px;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid rgb(255, 255, 255);\n    box-shadow: rgb(34 50 65 / 10%) 7px 8px 16px -6px;\n    cursor: pointer;\n    .card-body {\n        position: relative;\n        top: 50%;\n        transform: translateY(-50%);\n        font-size: 18px;\n        font-weight: 16;\n        color: #004488;\n    }\n    :hover {\n        background-color: #ffffef;\n    }\n`;\n\nexport const TopicTitle = styled.h3`\n    padding: 20px 0 20px 0;\n    font-weight: 500;\n    color: #444;\n`;\n","export const xs = 768;\nexport const sm = 768;\nexport const md = 992;\nexport const lg = 1200;\n","import Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport { Link } from \"react-router-dom\";\nimport { DashboardCard, DashboardCardColumns, TopicTitle } from \"./styled\";\n\nconst topics = [\n    {\n        name: \"Machine Learning Foundations\",\n        locked: false,\n        subtopics: [\n            \"Basics\",\n            \"Overfitting/Underfitting\",\n            \"Performance measurement\",\n            \"Optimization\",\n        ],\n    },\n    {\n        name: \"Supervised Learning\",\n        subtopics: [\"Regression\", \"Classification\", \"Neural Networks\"],\n        locked: true,\n    },\n    {\n        name: \"Unsupervised Learning\",\n        subtopics: [\n            \"K-means clustering\",\n            \"Hierarchical clustering\",\n            \"Probabilisitc clustering\",\n        ],\n        locked: true,\n    },\n];\n\nconst Dashboard = () => (\n    <Container>\n        {topics.map((topic) => (\n            <div key={topic.name}>\n                <TopicTitle>{topic.name}</TopicTitle>\n                <DashboardCardColumns locked={topic.locked}>\n                    {topic.subtopics.map((subtopic) => (\n                        <Link\n                            to={`/quiz/${Math.round(Math.random() * 1000)}`}\n                            key={subtopic}\n                        >\n                            <DashboardCard>\n                                <Card.Body>{subtopic}</Card.Body>\n                            </DashboardCard>\n                        </Link>\n                    ))}\n                </DashboardCardColumns>\n            </div>\n        ))}\n    </Container>\n);\n\nexport default Dashboard;\n","import { Question } from \"./api\";\n\nexport const randomizeQuestions = (questions: Question[]): Question[] =>\n    questions\n        .map((question) => ({\n            ...question,\n            answers: question.answers.sort(() => Math.random() - 0.5),\n        }))\n        .sort(() => Math.random() - 0.5);\n","import { randomizeQuestions } from \"./utils\";\n\nconst sleep = (t: number) => new Promise((s) => setTimeout(s, t));\n\nexport interface Answer {\n    id: number;\n    answer: string;\n    img: string;\n    isCorrect: boolean;\n}\n\nexport interface Question {\n    id: number;\n    question: string;\n    answers: Answer[];\n    img?: string;\n}\n\nconst pageQuestions = [\n    {\n        id: 1,\n        question:\n            \"Which of the following correctly represents the different learning rate ?\",\n        answers: [\n            {\n                id: 1,\n                answer: \"\",\n                img: \"/static/img/quiz_images/1/lr1.png\",\n                isCorrect: false,\n            },\n            {\n                id: 2,\n                answer: \"\",\n                img: \"/static/img/quiz_images/1/lr2.png\",\n                isCorrect: false,\n            },\n            {\n                id: 3,\n                answer: \"\",\n                img: \"/static/img/quiz_images/1/lr3.png\",\n                isCorrect: false,\n            },\n            {\n                id: 4,\n                answer: \"\",\n                img: \"/static/img/quiz_images/1/true.png\",\n                isCorrect: true,\n            },\n        ],\n    },\n    {\n        id: 2,\n        question: \"Which of the following model is overfitted to data ?\",\n        answers: [\n            {\n                id: 1,\n                answer: \"\",\n                img: \"/static/img/quiz_images/2/true.png\",\n                isCorrect: true,\n            },\n            {\n                id: 2,\n                answer: \"\",\n                img: \"/static/img/quiz_images/2/false.png\",\n                isCorrect: false,\n            },\n        ],\n    },\n    {\n        id: 3,\n        question: \"Which of the following model is underfitted to data ?\",\n        answers: [\n            {\n                id: 1,\n                answer: \"\",\n                img: \"/static/img/quiz_images/3/true.png\",\n                isCorrect: true,\n            },\n            {\n                id: 2,\n                answer: \"\",\n                img: \"/static/img/quiz_images/3/false.png\",\n                isCorrect: false,\n            },\n        ],\n    },\n    {\n        id: 4,\n        question:\n            \"What is the accuracy of the model for prediction shown in the figure.?\",\n        img: \"/static/img/quiz_images/4/q.png\",\n        answers: [\n            {\n                id: 1,\n                answer: \"66.66 %\",\n                img: \"\",\n                isCorrect: true,\n            },\n            {\n                id: 2,\n                answer: \"50 %\",\n                img: \"\",\n                isCorrect: false,\n            },\n            {\n                id: 3,\n                answer: \"90 %\",\n                img: \"\",\n                isCorrect: false,\n            },\n        ],\n    },\n    {\n        id: 5,\n        question:\n            \"Given two models as in the figure, the prediction is denoted by black line and red arrow denotes the loss. Which model has lower loss ?\",\n        answers: [\n            {\n                id: 1,\n                answer: \"\",\n                img: \"/static/img/quiz_images/5/true.png\",\n                isCorrect: true,\n            },\n            {\n                id: 2,\n                answer: \"\",\n                img: \"/static/img/quiz_images/5/false.png\",\n                isCorrect: false,\n            },\n        ],\n    },\n    {\n        id: 6,\n        question: \"Which of the function is convex ?\",\n        answers: [\n            {\n                id: 1,\n                answer: \"\",\n                img: \"/static/img/quiz_images/6/true.png\",\n                isCorrect: true,\n            },\n            {\n                id: 2,\n                answer: \"\",\n                img: \"/static/img/quiz_images/6/false.png\",\n                isCorrect: false,\n            },\n        ],\n    },\n    {\n        id: 7,\n        question:\n            \"Given the dataset as shown in the image, which of the following classifiers will achieve zero training error ?\",\n        img: \"/static/img/quiz_images/7/q.png\",\n        answers: [\n            {\n                id: 1,\n                answer: \"Logistic Regression\",\n                img: \"\",\n                isCorrect: false,\n            },\n            {\n                id: 2,\n                answer: \"SVM(Linear kernel)\",\n                img: \"\",\n                isCorrect: false,\n            },\n            {\n                id: 3,\n                answer: \"SVM(Quadratic Kernel)\",\n                img: \"\",\n                isCorrect: true,\n            },\n        ],\n    },\n    {\n        id: 8,\n        question:\n            \" Given the dataset as shown in the image, which of the following represents correct decision boundary for an soft margin SVM with Quadratic kernel and for large value of C (i.e C -> infinity.  )\",\n        img: \"/static/img/quiz_images/8/q.png\",\n        answers: [\n            {\n                id: 1,\n                answer: \"\",\n                img: \"/static/img/quiz_images/8/1.png\",\n                isCorrect: false,\n            },\n            {\n                id: 2,\n                answer: \"\",\n                img: \"/static/img/quiz_images/8/2.png\",\n                isCorrect: false,\n            },\n            {\n                id: 3,\n                answer: \"\",\n                img: \"/static/img/quiz_images/8/true.png\",\n                isCorrect: true,\n            },\n        ],\n    },\n    {\n        id: 9,\n        question:\n            \"Given the dataset as shown in the image, which of the following represents the output of k-means clustering. \",\n        img: \"/static/img/quiz_images/9/q.png\",\n        answers: [\n            {\n                id: 1,\n                answer: \"\",\n                img: \"/static/img/quiz_images/9/false.png\",\n                isCorrect: false,\n            },\n            {\n                id: 2,\n                answer: \"\",\n                img: \"/static/img/quiz_images/9/true.png\",\n                isCorrect: true,\n            },\n        ],\n    },\n    {\n        id: 10,\n        question:\n            \"Given two functions (function1 and function2) as shown in the figures. Gradient descent (GD) starts from the red mark in the figures and goes 'downhill' until it terminates. For which of functions, the minima found by GD will be global minima ?\",\n        answers: [\n            {\n                id: 1,\n                answer: \"\",\n                img: \"/static/img/quiz_images/10/false.png\",\n                isCorrect: false,\n            },\n            {\n                id: 2,\n                answer: \"\",\n                img: \"/static/img/quiz_images/10/true.png\",\n                isCorrect: true,\n            },\n        ],\n    },\n];\n\nexport const getQuestions = async (isPage: boolean): Promise<Question[]> => {\n    // TODO: Fetch questions from real api\n    // mocking api with sleep\n    await sleep(2000);\n    let questions;\n    if (isPage) {\n        questions = pageQuestions;\n    } else {\n        questions = [\n            {\n                id: 1,\n                question:\n                    \"Which of the following is more likely to be the result of DBScan (density-based) clustering algorithm?\",\n                answers: [\n                    {\n                        id: 1,\n                        answer: \"\",\n                        img: \"/static/img/quiz_images/dbscan.png\",\n                        isCorrect: true,\n                    },\n                    {\n                        id: 2,\n                        answer: \"\",\n                        img: \"/static/img/quiz_images/k_means.png\",\n                        isCorrect: false,\n                    },\n                ],\n            },\n            {\n                id: 2,\n                question: \"Which of the following dataset is linear?\",\n                answers: [\n                    {\n                        id: 1,\n                        answer: \"\",\n                        img: \"/static/img/quiz_images/linear_data.png\",\n                        isCorrect: true,\n                    },\n                    {\n                        id: 2,\n                        answer: \"\",\n                        img: \"/static/img/quiz_images/non_linear_data.png\",\n                        isCorrect: false,\n                    },\n                ],\n            },\n            {\n                id: 3,\n                question:\n                    \"Which of the figure demonstrate the model with 'High Bias'.?\",\n                answers: [\n                    {\n                        id: 1,\n                        answer: \"\",\n                        img: \"/static/img/quiz_images/high_bias.png\",\n                        isCorrect: true,\n                    },\n                    {\n                        id: 2,\n                        answer: \"\",\n                        img: \"/static/img/quiz_images/low_bias.png\",\n                        isCorrect: false,\n                    },\n                ],\n            },\n        ];\n    }\n    return randomizeQuestions(questions);\n};\n","import styled from \"styled-components\";\n\nconst getSVGStyles = ({ isReview = true }: { isReview?: boolean }) => {\n    if (!isReview) {\n        return `\n            max-width: 150px;\n            top: 20%;\n            left: 34%;\n        `;\n    } else {\n        return `\n            max-width: 40px;\n            top: 10%;\n            left: 65%;\n        `;\n    }\n};\n\nexport const StyledSVG = styled.svg`\n    position: absolute;\n    ${getSVGStyles}\n    .path {\n        stroke-dasharray: 1000;\n        stroke-dashoffset: 0;\n    }\n\n    .path.circle {\n        -webkit-animation: dash 0.9s ease-in-out;\n        animation: dash 0.9s ease-in-out;\n    }\n\n    .path.line {\n        stroke-dashoffset: 1000;\n        -webkit-animation: dash 0.9s 0.35s ease-in-out forwards;\n        animation: dash 0.9s 0.35s ease-in-out forwards;\n    }\n\n    .path.check {\n        stroke-dashoffset: -100;\n        -webkit-animation: dash-check 0.9s 0.35s ease-in-out forwards;\n        animation: dash-check 0.9s 0.35s ease-in-out forwards;\n    }\n\n    @-webkit-keyframes dash {\n        0% {\n            stroke-dashoffset: 1000;\n        }\n        100% {\n            stroke-dashoffset: 0;\n        }\n    }\n\n    @keyframes dash {\n        0% {\n            stroke-dashoffset: 1000;\n        }\n        100% {\n            stroke-dashoffset: 0;\n        }\n    }\n\n    @-webkit-keyframes dash-check {\n        0% {\n            stroke-dashoffset: -100;\n        }\n        100% {\n            stroke-dashoffset: 900;\n        }\n    }\n\n    @keyframes dash-check {\n        0% {\n            stroke-dashoffset: -100;\n        }\n        100% {\n            stroke-dashoffset: 900;\n        }\n    }\n`;\n","import { StyledSVG } from \"./styled\";\n\nconst Cross = ({ isReview }: { isReview: boolean }) => (\n    <StyledSVG\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 130.2 130.2\"\n        isReview={isReview}\n    >\n        <circle\n            className=\"path circle\"\n            fill=\"none\"\n            stroke=\"#D06079\"\n            strokeWidth=\"6\"\n            strokeMiterlimit=\"10\"\n            cx=\"65.1\"\n            cy=\"65.1\"\n            r=\"62.1\"\n        />\n        <line\n            className=\"path line\"\n            fill=\"none\"\n            stroke=\"#D06079\"\n            strokeWidth=\"6\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"10\"\n            x1=\"34.4\"\n            y1=\"37.9\"\n            x2=\"95.8\"\n            y2=\"92.3\"\n        />\n        <line\n            className=\"path line\"\n            fill=\"none\"\n            stroke=\"#D06079\"\n            strokeWidth=\"6\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"10\"\n            x1=\"95.8\"\n            y1=\"38\"\n            x2=\"34.4\"\n            y2=\"92.2\"\n        />\n    </StyledSVG>\n);\n\nexport default Cross;\n","import { StyledSVG } from \"./styled\";\n\nconst Tick = ({ isReview }: { isReview: boolean }) => (\n    <StyledSVG\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 130.2 130.2\"\n        isReview={isReview}\n    >\n        <circle\n            className=\"path circle\"\n            fill=\"none\"\n            stroke=\"#73AF55\"\n            strokeWidth=\"6\"\n            strokeMiterlimit=\"10\"\n            cx=\"65.1\"\n            cy=\"65.1\"\n            r=\"62.1\"\n        />\n        <polyline\n            className=\"path check\"\n            fill=\"none\"\n            stroke=\"#73AF55\"\n            strokeWidth=\"6\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"10\"\n            points=\"100.2,40.2 51.5,88.8 29.8,67.5 \"\n        />\n    </StyledSVG>\n);\n\nexport default Tick;\n","import Button from \"react-bootstrap/Button\";\nimport styled from \"styled-components\";\n\nconst getResultsStyles = ({ isPage }: { isPage: boolean }) => `\n    font-size: ${isPage ? \"25px\" : \"12px\"};\n`;\n\nexport const ResultsCont = styled.div`\n    text-align: center;\n    padding-top: 30px;\n    ${getResultsStyles};\n`;\n\nexport const ResultItem = styled.div`\n    padding: 20px;\n`;\n\nexport const ReviewButton = styled(Button)`\n    font-size: 25px;\n`;\n","import SignupForm from \"containers/Auth/SignupForm\";\nimport Button from \"react-bootstrap/Button\";\nimport { ResultItem, ResultsCont, ReviewButton } from \"./styled\";\n\nconst Result = ({\n    isPage,\n    resetQuiz,\n    totalCorrect,\n    onReview,\n}: {\n    isPage: boolean;\n    resetQuiz: () => void;\n    totalCorrect: Number;\n    onReview: () => void;\n}) => (\n    <ResultsCont isPage={isPage}>\n        <ResultItem>Total correct: {totalCorrect}</ResultItem>\n        {!isPage && (\n            <ResultItem>\n                <SignupForm isSignUp={true} isVertical={true} />\n            </ResultItem>\n        )}\n        {isPage && (\n            <ResultItem>\n                <ReviewButton variant=\"link\" onClick={onReview}>\n                    Review all questions\n                </ReviewButton>\n            </ResultItem>\n        )}\n        <ResultItem>\n            <Button onClick={resetQuiz} variant=\"link\">\n                Try again\n            </Button>\n        </ResultItem>\n    </ResultsCont>\n);\n\nexport default Result;\n","import Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Row from \"react-bootstrap/Row\";\nimport styled from \"styled-components\";\n\nexport const AnswerCol = styled(Col)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst getOptionContStyles = ({\n    forceHighlight,\n    isReview,\n}: {\n    forceHighlight?: boolean;\n    isReview: boolean;\n}) => {\n    if (!isReview) {\n        return `\n            :hover {\n                background-color: #ffffef;\n                opacity: 0.5;\n            }\n            cursor: pointer;\n        `;\n    } else {\n        return `\n            ${forceHighlight ? \"background-color: #ffffef;\" : \"\"}\n        `;\n    }\n};\n\nexport const OptionCont = styled.div`\n    ${getOptionContStyles}\n    min-height: 250px;\n    display: flex;\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid rgb(255, 255, 255);\n    box-shadow: rgb(34 50 65 / 10%) 0px 6px 20px 0px;\n    margin-bottom: 50px;\n`;\n\nexport const OptionImage = styled.img`\n    height: 250px;\n    max-width: 290px;\n    padding: 10px;\n    margin-bottom: 10px;\n    opacity: ${(props: { isTransparent: boolean }) =>\n        props.isTransparent ? \"0.2\" : \"1\"};\n`;\n\nexport const QuestionImage = styled.img`\n    max-height: 250px;\n    padding: 10px;\n    margin: 0 auto;\n    max-width: 400px;\n    margin-bottom: 40px;\n`;\n\nexport const QuestionText = styled.div`\n    padding: 50px 10px 40px 10px;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(10px + 2vmin);\n    font-weight: 500;\n    color: #666;\n    width: 100%;\n`;\n\nexport const StyledProgressBar = styled(ProgressBar)`\n    width: 100%;\n    height: 30px;\n`;\n\nexport const QuestionRow = styled(Row)`\n    text-align: center;\n`;\n\nexport const NextButton = styled(Button)`\n    margin: 30px auto 0 auto;\n    min-width: 150px;\n    border-radius: 0;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { getQuestions, Question } from \"./api\";\nimport Cross from \"./images/cross\";\nimport Tick from \"./images/tick\";\nimport Result from \"./Result\";\nimport {\n    AnswerCol,\n    NextButton,\n    OptionCont,\n    OptionImage,\n    QuestionImage,\n    QuestionRow,\n    QuestionText,\n    StyledProgressBar,\n} from \"./styled\";\nimport { randomizeQuestions } from \"./utils\";\n\ninterface Answered {\n    questionId: number;\n    answerId: number;\n    isCorrect: boolean;\n    correctAnswerId: number | null;\n}\n\nconst Quiz = ({\n    showSignupForm = false,\n    isPage,\n}: {\n    showSignupForm?: boolean;\n    isPage: boolean;\n}) => {\n    const [questions, setQuestions] = useState<Question[]>([]);\n    const [questionIndex, setQuestionIndex] = useState<number>(0);\n    const [answeredQuestions, setAnsweredQuestions] = useState<Answered[]>([]);\n    const [ticked, setTicked] = useState<number | null>(null);\n    const [crossed, setCrossed] = useState<number | null>(null);\n    const [isReview, setIsReview] = useState<boolean>(false);\n\n    const question = questions[questionIndex];\n    const answeredQuestion = question\n        ? answeredQuestions.find(\n              (answeredQuestion) => answeredQuestion.questionId === question.id\n          )\n        : undefined;\n\n    useEffect(() => {\n        getQuestions(isPage).then((result) => setQuestions(result));\n    }, [isPage]);\n\n    const nextQuestion = (answerId?: number) => {\n        if (!question || ticked !== null || crossed !== null) return;\n        if (isReview || !answerId) {\n            return setQuestionIndex(questionIndex + 1);\n        }\n        const correctAnswer = question.answers.find(\n            (answer) => answer.isCorrect\n        );\n        const isCorrect = correctAnswer ? correctAnswer.id === answerId : false;\n\n        const answered = {\n            questionId: question.id,\n            answerId,\n            isCorrect,\n            correctAnswerId: correctAnswer ? correctAnswer.id : null,\n        };\n        setAnsweredQuestions([\n            answered,\n            ...answeredQuestions.filter(\n                (answer) => answer.questionId !== question.id\n            ),\n        ]);\n        setTimeout(() => {\n            setQuestionIndex(questionIndex + 1);\n            setTicked(null);\n            setCrossed(null);\n        }, 2000);\n        isCorrect ? setTicked(answerId) : setCrossed(answerId);\n    };\n\n    const resetQuiz = () => {\n        setQuestions(randomizeQuestions(questions));\n        setQuestionIndex(0);\n        setAnsweredQuestions([]);\n        setIsReview(false);\n    };\n\n    const onReview = () => {\n        setIsReview(true);\n        setQuestionIndex(0);\n    };\n\n    let content;\n\n    if (questions.length > 0 && questionIndex === questions.length) {\n        content = (\n            <Result\n                isPage={isPage}\n                resetQuiz={resetQuiz}\n                onReview={onReview}\n                totalCorrect={\n                    answeredQuestions.filter((answered) => answered.isCorrect)\n                        .length\n                }\n            />\n        );\n    } else if (!question) {\n        content = (\n            <QuestionRow>\n                <Spinner animation=\"border\" />\n            </QuestionRow>\n        );\n    } else {\n        const progress =\n            questions.length > 0\n                ? ((questionIndex + 1) / questions.length) * 100\n                : 0;\n        content = (\n            <React.Fragment>\n                <QuestionRow>\n                    <StyledProgressBar\n                        now={progress}\n                        label={`${questionIndex + 1} / ${questions.length}`}\n                    />\n                </QuestionRow>\n                {isReview && (\n                    <QuestionRow>\n                        <NextButton\n                            onClick={() => nextQuestion()}\n                            variant=\"secondary\"\n                            size=\"sm\"\n                        >\n                            Next\n                        </NextButton>\n                    </QuestionRow>\n                )}\n                <QuestionRow>\n                    <QuestionText>{question.question}</QuestionText>\n                    {question.img && <QuestionImage src={question.img} />}\n                </QuestionRow>\n                <QuestionRow>\n                    {question.answers.map((answer) => {\n                        const isTicked = !isReview\n                            ? answer.id === ticked\n                            : answeredQuestion &&\n                              answer.id === answeredQuestion.correctAnswerId;\n                        const isCrossed = !isReview\n                            ? answer.id === crossed\n                            : answeredQuestion &&\n                              answer.id === answeredQuestion.answerId &&\n                              answer.id !== answeredQuestion.correctAnswerId;\n                        return (\n                            <AnswerCol\n                                lg=\"6\"\n                                key={`${question.id}-${answer.id}`}\n                            >\n                                <OptionCont\n                                    onClick={() => nextQuestion(answer.id)}\n                                    forceHighlight={\n                                        answeredQuestion &&\n                                        answeredQuestion.answerId === answer.id\n                                    }\n                                    isReview={isReview}\n                                >\n                                    {answer.img && (\n                                        <OptionImage\n                                            isTransparent={Boolean(\n                                                !isReview &&\n                                                    (isTicked || isCrossed)\n                                            )}\n                                            src={answer.img}\n                                        />\n                                    )}\n                                    {answer.answer && (\n                                        <div> {answer.answer} </div>\n                                    )}\n\n                                    {isTicked && <Tick isReview={isReview} />}\n                                    {isCrossed && <Cross isReview={isReview} />}\n                                </OptionCont>\n                            </AnswerCol>\n                        );\n                    })}\n                </QuestionRow>\n            </React.Fragment>\n        );\n    }\n    return (\n        <Container onClick={() => (isReview ? nextQuestion() : undefined)}>\n            {content}\n        </Container>\n    );\n};\n\nexport default Quiz;\n","import styled from \"styled-components\";\n\nexport const HeadingContainer = styled.div`\n    width: 100%;\n    padding: 80px 10px 20px 10px;\n    text-align: center;\n`;\n\nexport const Header = styled.h1`\n    font-size: calc(16px + 4vmin);\n    font-weight: 600;\n    color: #444;\n    padding-bottom: 10px;\n`;\n\nexport const SubHeading = styled.div`\n    font-size: calc(10px + 2vmin);\n    font-weight: 500;\n    color: #999;\n`;\n\nexport const FormContainer = styled.div`\n    padding: 50px 10px 10px 10px;\n`;\n\nexport const QuizContainer = styled.div`\n    background: rgb(255, 255, 255);\n    border: 1px solid rgb(213, 220, 230);\n    border-radius: 6px;\n    box-shadow: rgb(34 50 65 / 10%) 0px 6px 20px 0px;\n    text-align: center;\n    align-items: center;\n    min-height: 300px;\n    padding: 40px;\n    padding-bottom: 80px;\n`;\n","import SignUpForm from \"containers/Auth/SignupForm\";\nimport Quiz from \"containers/Quiz\";\nimport React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport {\n    FormContainer,\n    Header,\n    HeadingContainer,\n    QuizContainer,\n    SubHeading,\n} from \"./styled\";\n\nconst HomePage = () => (\n    <Container>\n        <Row>\n            <HeadingContainer>\n                <Header>Be confident in Machine Learning.</Header>\n                <SubHeading>\n                    Understand the key concepts of Machine Learning with 100's\n                    of quizzes.\n                </SubHeading>\n                <FormContainer>\n                    <SignUpForm isSignUp={true} isVertical={false} />\n                </FormContainer>\n            </HeadingContainer>\n        </Row>\n        <Row>\n            <Col sm={12}>\n                <QuizContainer>\n                    <Quiz showSignupForm={true} isPage={false} />\n                </QuizContainer>\n            </Col>\n        </Row>\n    </Container>\n);\n\nexport default HomePage;\n","import { logOut, selectUser, showLoginModal } from \"containers/Auth/authSlice\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst NavbarComponent = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const onLogOut = () => {\n        dispatch(logOut());\n        history.push(\"/\");\n    };\n    const setShowLoginModal = (e: React.MouseEvent<HTMLElement>) =>\n        dispatch(showLoginModal());\n\n    const user = useSelector(selectUser);\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand as={Link} to=\"/\">\n                MLQuiz\n            </Navbar.Brand>\n\n            <Nav className=\"mr-auto\">\n                {user && (\n                    <Nav.Link as={Link} to=\"/dashboard\">\n                        Dashboard\n                    </Nav.Link>\n                )}\n            </Nav>\n\n            {user && (\n                <Nav>\n                    <NavDropdown title={user.email} id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item onClick={onLogOut}>\n                            Logout\n                        </NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n            )}\n            {!user && (\n                <Nav.Item>\n                    <Navbar.Text\n                        style={{ paddingRight: \"30px\" }}\n                        className=\"nav-text d-none d-sm-inline\"\n                    >\n                        Already a member?\n                    </Navbar.Text>\n                    <Button\n                        variant=\"outline-secondary\"\n                        size=\"sm\"\n                        onClick={setShowLoginModal}\n                        style={{ width: \"100px\" }}\n                    >\n                        Login\n                    </Button>\n                </Nav.Item>\n            )}\n        </Navbar>\n    );\n};\n\nexport default NavbarComponent;\n","import Quiz from \"containers/Quiz\";\nimport React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\ntype QuizMatchParams = { id: string };\n\nconst QuizPage = ({ match }: RouteComponentProps<QuizMatchParams>) => {\n    // const quizId = match.params.id;\n    return <Quiz isPage={true} />;\n};\n\nexport default QuizPage;\n","import LoginModal from \"containers/Auth/LoginModal\";\nimport Dashboard from \"containers/Dashboard\";\nimport HomePage from \"containers/HomePage\";\nimport Navbar from \"containers/Navbar\";\nimport QuizPage from \"containers/QuizPage\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst Routes = () => (\n    <Router basename=\"/\">\n        <Navbar />\n        <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/quiz/:id\" component={QuizPage} />\n        </Switch>\n        <LoginModal />\n    </Router>\n);\n\nexport default Routes;\n","import { getBootstrapData } from \"containers/Auth/authSlice\";\nimport Routes from \"containers/Routes\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nconst App = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getBootstrapData());\n    }, []);\n    return <Routes />;\n};\n\nexport default App;\n","import { Action, configureStore, ThunkAction } from \"@reduxjs/toolkit\";\nimport authReducer from \"containers/Auth/authSlice\";\n\nexport const store = configureStore({\n    reducer: {\n        auth: authReducer,\n    },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n    ReturnType,\n    RootState,\n    unknown,\n    Action<string>\n>;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import App from \"App\";\nimport { store } from \"app/store\";\nimport axios from \"axios\";\nimport \"custom.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\naxios.defaults.baseURL =\n    process.env.NODE_ENV === \"production\"\n        ? process.env.REACT_APP_BE_URL\n        : process.env.REACT_APP_DEV_API_URL;\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}